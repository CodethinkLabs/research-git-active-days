Git Active Days
===============

This repo contains tools for analysing software projects using the 'Git Active
Days' metric.


Requirements
------------

You need a computer with a minimum 10GB of free disk space, with Git, Python,
sloccount, and [YBD] installed.

[YBD]: https://github.com/devcurmudgeon/ybd/


Running the scripts
-------------------

The git-active-days script can be run on one git working directory or several.

Some examples:

    # count GAD for for master across two repos
    git-active-days a-git-directory another-git-directory

    # count GAD across three repos, by engineers from foo.com,
    # for a date range, across all refs
    git-active-days --person-days --filter-author-email='*@foo.com' \
            --start-date=2014-01-01 end-date=2015-08-01 --all-refs  \
            definitions morph ybd

The measure.py script runs git-active-days and David A. Wheeler's SLOCCount
on a set of git repositories. Try try it, clone this repo, and the Baserock reference system definitions.

    git clone git://github.com/codethinklabs/research-git-active-days
    git clone git://git.baserock.org/baserock/baserock/definitions

Now run the measure.py script:

    cd definitions
    python ../research-git-active-days/measure.py systems/genivi-baseline-system-x86_64-generic.morph

The script will find every component of the Baserock GENIVI Baseline reference
system, clone all of the source code involved locally, and then use `sloccount`
and the `git-active-days` script from this repo to analyse it. The results will
be written to `results.csv` in the current directory.

The downloaded Git repos will be kept in `~/.cache/ybd` by default. You can
change the location by adding a custom ybd.conf file to the definitions/
directory.


Reproducing the exact work environment
--------------------------------------

The original results were produced in an OpenStack instance running Fedora
Cloud 22.

To reproduce this environment you can use the `setup-vm.yaml` Ansible playbook.
First, create an OpenStack instance from a [Fedora Cloud] image, and attach a
100GB volume.

Then, run the following commands in a local clone of this repo. Replace the
IP address with the actual IP of the OpenStack instance:

    echo '172.16.20.136 ansible_ssh_user=fedora' > hosts
    ansible-playbook -i hosts ./setup-vm.yaml

The 'install latest updates' step will probably be slow, you can get away with
commenting it out if you are impatient.

Then you can SSH to the instance as user 'fedora' and run the measure.py script
as described above.

[Fedora Cloud]: https://getfedora.org/en/cloud/download/
